name: Build Elasticsearch RPMs

on:
  workflow_dispatch:
  push:
    branches:
      - 'r/*'
    paths:
      - oc.version
      - .github/workflows/build-elasticsearch.yml

jobs:
  build:
    strategy:
      matrix:
        osversion:
          - 7
          - 8
          - 9
    outputs:
      oc-version: ${{ steps.version.outputs.version }}
    name: build (el${{ matrix.osversion }})
    runs-on: ubuntu-latest
    container:
      image: docker.io/lkiesow/opencast-rpmbuild:el${{ matrix.osversion }}-oc14
    steps:
      - uses: actions/checkout@v3

      - id: version
        run: echo "version=$(cat oc.version)" >> $GITHUB_OUTPUT

      - name: download rpm
        run: |
          curl -OL https://pkg.opencast.org/rpms/release/el/9/oc-11/x86_64/elasticsearch/elasticsearch-oss-7.10.2-x86_64.rpm

      - name: prepare gpg
        env:
          GPG_KEY: ${{ secrets.GPG_KEY_OC14 }}
        run: |
          echo "${GPG_KEY}" | gpg --import
          echo '%_gpg_name cloud@opencast.org' >> ~/.rpmmacros

      - name: sign rpms
        run: |
          rpmsign --addsign elasticsearch-oss-*.rpm

      - name: configure s3cmd
        env:
          S3_HOST: ${{ secrets.S3_HOST }}
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
        run: |
          echo "host_base = ${S3_HOST}" > "$HOME/.s3cfg"
          echo "host_bucket = ${S3_HOST}" >> "$HOME/.s3cfg"
          echo "bucket_location = us-east-1" >> "$HOME/.s3cfg"
          echo "use_https = True" >> "$HOME/.s3cfg"
          echo "access_key = ${S3_ACCESS_KEY}" >> "$HOME/.s3cfg"
          echo "secret_key = ${S3_SECRET_KEY}" >> "$HOME/.s3cfg"
          echo "signature_v2 = False" >> "$HOME/.s3cfg"

      - name: publish repository rpm
        run: |
          s3cmd put -P *.rpm "s3://opencast-pkg/rpms/release/el/${{ matrix.osversion }}/oc-${{ steps.version.outputs.version }}/x86_64/"

  createrepo:
    uses: opencast/opencast-rpmbuild/.github/workflows/createrepo.yml@r/14.x
    needs: build
    strategy:
      matrix:
        os-version:
          - 7
          - 8
          - 9
    with:
      oc-version: ${{ needs.build.outputs.oc-version }}
      os-version: ${{ matrix.os-version }}
      arch: noarch
      repo: release
    secrets:
      S3_HOST: ${{ secrets.S3_HOST }}
      S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
      S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
